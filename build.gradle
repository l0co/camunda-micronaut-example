plugins {
    id "net.ltgt.apt-eclipse" version "0.21"
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id "application"
}



version "0.1"
group "camunda.example"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly 
}

dependencies {
    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"

    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-runtime"
    implementation "javax.annotation:javax.annotation-api"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "io.micronaut:micronaut-http-client"

    implementation "info.novatec:micronaut-camunda-bpm-feature:0.5.0"
    implementation "com.h2database:h2"
    implementation "org.camunda.bpm:camunda-engine:7.13.0"
    implementation "org.javatuples:javatuples:1.2"

    annotationProcessor("io.micronaut.jaxrs:micronaut-jaxrs-processor:1.0.1")
    implementation "org.camunda.bpm.webapp:camunda-webapp-webjar:7.14.0-alpha1"
    implementation "org.glassfish.jersey.core:jersey-server:2.30.1"
    implementation "org.glassfish.jersey.media:jersey-media-json-jackson:2.30.1"
    implementation "org.glassfish.jersey.media:jersey-media-multipart:2.30.1"
    implementation "org.glassfish.jersey.inject:jersey-hk2:2.30.1"

    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"

    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"

    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "io.micronaut.test:micronaut-test-junit5"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
}

test.classpath += configurations.developmentOnly

mainClassName = "camunda.example.Application"
// use JUnit 5 platform
test {
    useJUnitPlatform()
}
tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}

shadowJar {
    mergeServiceFiles()
}

tasks.withType(JavaExec) {
    classpath += configurations.developmentOnly
    jvmArgs('-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
}
